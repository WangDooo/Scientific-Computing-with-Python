#================================================================
# 数组的属性
#----------------------------------------------------------------
# import numpy as np 

# x2d = np.array(((100,200,300),
# 				(111,222,333),
# 				(123,456,789)))
# print(x2d.shape)
# print(x2d.dtype)
# print(x2d.size)
# print(x2d.itemsize) # 数组中每个元素的字节长度
# print(x2d.ndim) # 维度
# print(x2d.data)
#----------------------------------------------------------------


#================================================================
# 数据的基础操作
#----------------------------------------------------------------
# import numpy as np

# x = np.array([1,12,25,8,15,35,50,7,2,10])
# print(x[3:7])
# print(x[1:9:2])
# print(x[0:9:3])
# x2d = np.array(((100,200,300),
# 				(111,222,333),
# 				(123,456,789),
# 				(125,457,791),
# 				(127,658,965),
# 				(777,999,56)))
# print(x2d[0:4,0:2])
# print(x2d[0:4:2,0:3:2])

# for i in x:
# 	print(i)
# for row in x2d:
# 	print(row)
#----------------------------------------------------------------


#================================================================
# 数据的变形和转换 ravel reshape 不改变原数组
#----------------------------------------------------------------
# import numpy as np

# x2d = np.array(((100,200,300),
# 				(111,222,333),
# 				(123,456,789),
# 				(125,457,791),
# 				(127,658,965),
# 				(777,999,56)))
# print(x2d)
# x2d.ravel()
# print(x2d)
# print(x2d.ravel())
# x2d.resize((3,6)) # resize 改变原数组
# print(x2d)
# x2d.reshape(6,3)
# print(x2d)
# print(x2d.reshape(6,3))
# x2d.shape = (9,2) # 改变原数组
# print(x2d)
#----------------------------------------------------------------


#================================================================
# 与数组相关的类-矩阵子类 matrix
#----------------------------------------------------------------
# import numpy as np

# a = np.matrix('1 2 3; 4 5 6; 7 8 9')
# print(a)
# b = np.matrix('4 5 6; 7 8 9; 10 11 12')
# print(b)
# print(a*b)
#----------------------------------------------------------------


#================================================================
# 与数组相关的类-掩码数组 numpy.ma
#----------------------------------------------------------------
# import numpy as np
# import numpy.ma as ma

# x = np.array([72,79,85,90,150,-135,120,-10,60,100])
# mx = ma.masked_array(x, mask=[0,0,0,0,0,1,0,1,0,0])
# mx2 = ma.masked_array(x, mask=x<0)
# print(x.mean())
# print(mx.mean())
# print(mx2.mean())
#----------------------------------------------------------------


#================================================================
# 结构化的数组
#----------------------------------------------------------------
# import numpy as np
# rectype = np.dtype({'names':['mintemp','maxtemp','avgtemp','city'], 'formats':['i4','i4','f4','a30']})
# a = np.array([(10,44,25.2,'Nanjing'),(10,57,26,'Beijing'),(30,78,45,'XXXX')], dtype=rectype)
# print(a[0])
# print(a['mintemp'])
# print(a[1]['maxtemp'])
# print(a['city'][2])

#----------------------------------------------------------------


#================================================================
# 通用函数(unfunc)是对ndarray进行一个元素一个元素操作的函数
# 通常最好选择利用这些函数而不选择循环，因为相比于循环这些函数更高效 
#----------------------------------------------------------------
# import numpy as np 

# x1 = np.array([72,79,85,0.1,150,-135,120,-10,np.pi,100])
# x2 = np.array([72,79,85,0.1,150,-135,120,-10,60,101])
# x_angle = np.array([30,60,90,120,150,180])
# x_sqr = np.array([9,16,25,225,400,625])
# x_bit = np.array([2,4,8,16,32,64])
# print(np.greater_equal(x1,x2))
# print(np.mod(x1,x2))
# print(np.exp(x1))
# print(np.reciprocal(x1)) # 倒数
# print(np.negative(x1))
# print(np.isreal(x1))
# print(np.isreal([1+1j,1+0j,2.3,2j]))
# print(np.isnan(np.log10(x1)))
# print(np.sqrt(np.square(x_sqr)))
# print(np.sin(x_angle*np.pi/180))
# print(np.tan(x_angle*np.pi/180))
# print(np.right_shift(x_bit,1))
# print(np.left_shift(x_bit,1))
#----------------------------------------------------------------


#================================================================
# Numpy的数学模块
#----------------------------------------------------------------
# import numpy as np
# from numpy import linalg as LA 

# arr2d = np.array(((1,2,3),
# 				  (1,1,1),
# 				  (2,2,3)))
# eig_val, eig_vec = LA.eig(arr2d)
# print(eig_val) # 特征值
# print(eig_vec) # 特征向量 v[:,i]列是w[i]的特征向量
# print(LA.norm(arr2d))
# print(LA.det(arr2d))
# print(LA.inv(arr2d))
# # 2x + 3y = 4
# # 3x + 4y = 5
# arr1 = np.array([[2,3],[3,4]])
# arr2 = np.array([4,5])
# results = np.linalg.solve(arr1,arr2)
# print(results)
# print(np.allclose(np.dot(arr1,results),arr2)) # 比较两个数组

#----------------------------------------------------------------


#================================================================
# Numpy随机抽样模块的函数
#----------------------------------------------------------------
# import numpy as np

# print(np.random.permutation(10)) # 随机排列一个序列
# print(np.random.randint(20,50,size=10))
# print(np.random.random_sample(10))
# print(np.random.chisquare(5,10)) # 自由度
# alpha, location_param = 4.,2
# print(np.random.pareto(alpha, 10)+location_param)
# print(np.random.standard_normal(20))
# mean, std_deviation = 4.,2
# print(np.random.lognormal(mean, std_deviation, 10))

#----------------------------------------------------------------


#================================================================
# Scipy 积分
#----------------------------------------------------------------
# import numpy as np
# from scipy.integrate import quad

# def integrand(x,a,b,c):
# 	return a*x*x+b*x+c

# a = 3
# b = 4
# c = 1
# result = quad(integrand, 0, np.inf, args=(a,b,c)) # quad 通用积分
# print(result)


#----------------------------------------------------------------


#================================================================
# 聚类 Scipy 向量量化
#----------------------------------------------------------------
# from scipy.cluster.vq import kmeans, vq
# from numpy.random import rand
# from numpy import vstack, array
# import pylab as pl

# data_set = vstack((rand(50,2)+array([.5,.5]), rand(50,2)))
# centroids_of_clusters,_ = kmeans(data_set,3)
# index,_ = vq(data_set,centroids_of_clusters)
# pl.plot(data_set[index==0,0], data_set[index==0,1],'ob',data_set[index==1,0], data_set[index==1,1],'or')
# pl.plot(data_set[index==2,0], data_set[index==2,1],'og')
# pl.plot(centroids_of_clusters[:,0],centroids_of_clusters[:,1],'sm',markersize=8)
# pl.show()
#----------------------------------------------------------------


#================================================================
# 层次聚类
#----------------------------------------------------------------
# import numpy
# from numpy.random import rand
# from matplotlib.pyplot import show
# from scipy.spatial.distance import pdist
# import scipy.cluster.hierarchy as sch

# x = rand(8,80)
# x[0:4,:] *= 2
# print(x)
# y = pdist(x)
# print(y)
# z = sch.linkage(y)
# sch.dendrogram(z)
# show()

#----------------------------------------------------------------


#================================================================
# 曲线拟合
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------


#================================================================
# 
#----------------------------------------------------------------

#----------------------------------------------------------------